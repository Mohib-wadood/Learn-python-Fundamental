# -*- coding: utf-8 -*-
"""Session1-python-fundamental.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FvUW56hdmACI-Hn3OCXBbzBaXhbwMPdP
"""

print("hello world")

print(5)

print(4+5)

print("mohib",5,5.3,True)

print("mohib",5,5.3,True,sep= '/')

print("hello",end=' ')
print('world')

#integer
print(1e309)
#float
print(1.8e309)
#string
print('hello world')
#bolean
print(True)
print(False)
#list
print([1,2,3,4,5])
#tuple
print((1,2,3,4,5))
#sets
print({1,2,3,4,5})
#Dictionary
print({'name':'mohib','gender':'Male','wieght':75})
#Complex
print(2+5j)

#type
type(2+4j)

"""#Input from user"""

# Now write program that take input from user Store it in a variable
fnum=int(input("Enter your first number "))
snum=int(input("Enter your second number "))

# Add these numbers
result= (fnum + snum)
# Print result on screen
print(result)

# the data which is store in vriable is called letral
# Binary letral
a=0b1010

# Decimal letral
b=100

# Octal
c=0o310

# Hexadecimal
d=0x12c

#float letral
float_1= 10.5
float_2= 1.5e2 # Means 1.5 * 10^2
float_3= 1.5e-3 # Means 1.5 * 10^-3

# Complex letral
x=3+4j
print(a,b,c,d)
print(float_1,float_2,float_3)
print(x,x.imag,x.real)

# Convert celsius to farenheit
C=int(input("Enter value of C: "))
F= (9%5*C)+32
print(F)

def find_dogs_and_chickens(total_heads ,toatal_legs):

 # calculate number of chicken (c) using the equation
 chickens = (4* total_heads - total_legs)//2
 # calculate number of dogs (d) using the equation
 dogs = total_heads-chickens
 if chickens < 0 or dogs < 0 or 4 * dogs + 2 * chickens != total_legs:
    return "No solution exist with the given total heads and total legs"
 return dogs , chickens

total_heads = int(input("Enter number of Heads :"))
total_legs = int(input("Enter number of legs :"))

result = find_dogs_and_chickens(total_heads , total_legs)

if isinstance(result, str):
    print(result)
else:
    dogs, chickens = result
    print(f"Number of dogs: {dogs}")
    print(f"Number of chickens: {chickens}")

n = int(input("Enter positive integer : "))
sum_natral = (n * ( n + 1 ) * (2 * n + 1)) // 6
print(f'sum of the square of first {n} natural number is : {sum_natral  }')

# Get inputs for the first fraction
a = int(input("Enter the numerator of the first fraction: "))
b = int(input("Enter the denominator of the first fraction: "))

# Get inputs for the second fraction
c = int(input("Enter the numerator of the second fraction: "))
d = int(input("Enter the denominator of the second fraction: "))

 # Find the numerator of the resulting fraction
numerator = a * d + b * c
denominator = b * d

print(f"The sum of the fractions is: {numerator}/{denominator}")

